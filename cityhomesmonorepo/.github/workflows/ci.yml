name: CI

on:
  pull_request:
    branches: [ "main", ]

env:
  PNPM_VERSION: '9.9.0'
  DB_CONNECTION: pgsql
  DB_PORT: 5432
  DB_DATABASE: cityhomesmonorepo_test
  DB_PASSWORD: postgres
  DB_USERNAME: postgres

jobs:

  run-tests:
    name: Test code
    timeout-minutes: 15
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_PASSWORD: ${{ env.DB_PASSWORD }}
          POSTGRES_DB: ${{ env.DB_DATABASE }}
        ports:
          - '5432:5432'
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 3

    strategy:
      fail-fast: false
      matrix:
        php-versions: [ '8.2', '8.3' ]
        node-version: [ 20.12.2 ]

    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - uses: pnpm/action-setup@v4
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Setup Node.js environment
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'

      - name: Setup PHP 8.3
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          coverage: xdebug

      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache composer dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install pnpm dependencies
        run: |
          npm install -g pnpm@${{ env.PNPM_VERSION }}
          pnpm install

      - name: Build apps and packages
        run: cd apps/angular && pnpm run build

      - name: Prepare the api
        run: |
          cd apps/laravel
          composer install --no-progress --prefer-dist --optimize-autoloader
          php -r "copy('.env.example', '.env');"
          php artisan key:generate
          php artisan config:clear
          php artisan migrate -v

      - name: Test apps and packages
        run: cd apps/laravel && composer test